export const getHeaders = async (serviceRequestConfigOptions: CustomConfig, options: ApiRequestOptions): Promise<Headers> => {
	const headers = Object.entries({
		Accept: 'application/json',
		...options.headers,
		...serviceRequestConfigOptions.headers,
	})
		.filter(([_, value]) => isDefined(value))
		.reduce((headers, [key, value]) => ({
			...headers,
			[key]: String(value),
		}), {} as Record<string, string>);

	if (isStringWithValue(serviceRequestConfigOptions.token)) {
		headers['Authorization'] = `Bearer ${serviceRequestConfigOptions.token}`;
	}

	if (options.body) {
		if (options.mediaType) {
			headers['Content-Type'] = options.mediaType;
		} else if (isBlob(options.body)) {
			headers['Content-Type'] = 'application/octet-stream';
		} else if (isString(options.body)) {
			headers['Content-Type'] = 'text/plain';
		} else if (!isFormData(options.body)) {
			headers['Content-Type'] = 'application/json';
		}
	}

	return new Headers(headers);
};
